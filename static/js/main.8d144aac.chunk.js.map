{"version":3,"sources":["resources/en.ts","resources/zh.ts","i18n/I18nContext.tsx","i18n/I18nProvider.tsx","i18n/useI18n.tsx","Components/Home.tsx","Components/About.tsx","Components/Works.tsx","Components/Experience.tsx","Components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["I18nContext","createContext","t","getLocale","setLocale","I18nProvider","props","useState","locale","i18n","key","translations","Provider","value","children","useI18n","useContext","Home","className","id","style","left","right","top","position","color","About","paddingLeft","paddingTop","Works","Experience","Footer","backgroundColor","href","textAlign","width","paddingBottom","App","Container","fluid","Navbar","fixed","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","onClick","to","Boolean","window","location","hostname","match","require","default","ReactDOM","render","locales","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8d144aac.chunk.js","sourcesContent":["export default {\n    'hometitle': 'Hello, I am Aaron Chen. Software Engineer based in Vancouver, BC',\n    'about': 'About',\n    'experience' : 'Experience',\n    'works':'Works',\n    'email':'Email',\n    'resume':'Resume',\n    'language':'語言'\n};","export default {\n    'hometitle': '您好，我是 Aaron 陳。 在溫哥華的軟體工程師',\n    'about': '關於',\n    'experience' : '經驗',\n    'works':'作品',\n    'email':'信箱',\n    'resume':'履歷',\n    'language':'Language'\n};","import { createContext } from 'react';\n\nexport type I18nContextProps = {\n  t: (key: string) => string,\n  getLocale: () => void,\n  setLocale: (locale: string) => void,\n};\n\nconst I18nContext = createContext<I18nContextProps>({\n  t: () => '',\n  getLocale: () => {},\n  setLocale: () => {},\n});\n\nexport default I18nContext;","import React, { useState } from 'react';\nimport I18nContext, { I18nContextProps } from './I18nContext';\n\ntype I18nProviderProps = {\n  locales: string[],\n  translations: any;\n};\n\nconst I18nProvider: React.FC<I18nProviderProps> = (props) => {\n  const [ locale, setLocale ] = useState('en');\n\n  const i18n: I18nContextProps = { \n    t: key => props.translations[locale][key],\n    getLocale: () => locale,\n    setLocale: locale => setLocale(locale),\n  };\n\n  return (\n    <I18nContext.Provider value={i18n}>\n      {props.children}\n    </I18nContext.Provider>\n  );\n};\n\nexport default I18nProvider;","import { useContext } from 'react';\nimport I18nContext from './I18nContext';\n\nfunction useI18n () {\n  const i18n = useContext(I18nContext);\n  return i18n;\n}\n\nexport default useI18n;","import React from \"react\"\nimport { useI18n } from '../i18n';\n\nconst Home: React.FC = () => {\n    const { t, setLocale } = useI18n();\n    return (\n        <div className=\"pages\" id = \"home\">\n            <h1 style={{left:'10%', right:'10%' , top: '50%', position:'absolute', color:'#FFFFFF' }}>{t('hometitle')}</h1>\n        </div>\n    );\n  }\n  \n  export default Home;","import React from \"react\"\nimport { useI18n } from '../i18n';\n\nconst About: React.FC = () => {\n    const { t, setLocale } = useI18n();\n    return (\n        <div className=\"pages\" id=\"about\">\n            <h1 style={{paddingLeft :'10%', paddingTop: \"10%\", color:'#FFFFFF' }}>{t('about')}</h1>\n        \n        \n        </div>\n    );\n  }\n  \nexport default About;","import React from \"react\"\nimport { useI18n } from '../i18n';\n\nconst Works: React.FC = () => {\n    const { t, setLocale } = useI18n();\n    return (\n        <div className=\"pages\" id=\"works\">\n            <h1 style={{paddingLeft :'10%', paddingTop: \"10%\", color:'#FFFFFF' }}>{t('works')}</h1>\n        </div>\n    );\n  }\n  \nexport default Works;","import React from \"react\"\nimport { useI18n } from '../i18n';\n\nconst Experience: React.FC = () => {\n    const { t, setLocale } = useI18n();\n    return (\n        <div className=\"pages\" id=\"experience\">\n            <h1 style={{paddingLeft :'10%', paddingTop: \"10%\", color:'#FFFFFF' }}>{t('experience')}</h1>\n        </div>\n    );\n  }\n  \nexport default Experience;","import React from \"react\"\nimport { useI18n } from '../i18n';\n\nconst Footer: React.FC = () => {\n    const { t, setLocale } = useI18n();\n    return (\n        <footer style={{backgroundColor:\"#1D1D21\" }} >\n            <a href=\"https://github.com/AaronCChen2233/Portfolio/tree/master\">\n                <div style={{textAlign:\"center\" , color:'#FFFFFF', width:\"100hv\", paddingBottom: \"60px\"}}>Designed &amp; Built by Aaron Chen</div>\n            </a>\n        </footer>\n    );\n  }\n  \n  export default Footer;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Link } from \"react-router-dom\"\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Home from './Components/Home';\nimport About from './Components/About';\nimport Works from './Components/Works';\nimport Experience from './Components/Experience';\nimport Footer from './Components/Footer';\nimport { useI18n } from './i18n';\n\n\nconst App: React.FC = () => {\n  const { t, setLocale } = useI18n();\n  return (\n    <Router>\n    <Container className=\"p-0\" fluid={true}>\n      <Navbar fixed=\"top\" bg=\"#1D1D21\" variant=\"dark\" expand=\"sm\">\n        <Navbar.Brand href=\"/Portfolio/#home\">Aaron Chen</Navbar.Brand>\n        <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n        <Navbar.Collapse id=\"navbar-toggle\">\n          <Nav className=\"ml-auto\">\n          <NavDropdown title={t('language')} id=\"nav-dropdown\">\n              <NavDropdown.Item onClick={() => setLocale('en')} >English</NavDropdown.Item>\n              <NavDropdown.Item onClick={() => setLocale('zh')} >中文</NavDropdown.Item>\n            </NavDropdown>\n            <a className=\"nav-link\" href=\"/Portfolio/#about\">{t('about')}</a>\n            <a className=\"nav-link\" href=\"/Portfolio/#experience\">{t('experience')}</a>\n            <a className=\"nav-link\" href=\"/Portfolio/#works\">{t('works')}</a>\n            <a className=\"nav-link\" href=\"mailto:aaronchen2233@gmail.com\">{t('email')}</a>\n            <Link className=\"nav-link\" to=\"/resume\">{t('resume')}</Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Home></Home>\n      <About></About>\n      <Experience></Experience>\n      <Works></Works>\n\n      <Footer></Footer>\n    </Container>\n    \n  </Router>\n  );\n}\n\nexport default App;\n\n\n// interface AppProps{\n//     // setLocale : (l:string) => void\n// }\n\n// class App extends React.Component<AppProps, {}>{\n//   constructor(props : AppProps) {\n//     super(props);\n//     this.state = {\n//     }\n//   }\n\n  // render() {\n  //   return (\n  //     <Router>\n  //     <Container className=\"p-0\" fluid={true}>\n  //       <Navbar fixed=\"top\" bg=\"#1D1D21\" variant=\"dark\" expand=\"sm\">\n  //         <Navbar.Brand href=\"/Portfolio/#home\">Aaron Chen</Navbar.Brand>\n  //         <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n  //         <Navbar.Collapse id=\"navbar-toggle\">\n  //           <Nav className=\"ml-auto\">\n  //             <a className=\"nav-link\" href=\"/Portfolio/#about\">{t('learn_react')}</a>\n  //             <a className=\"nav-link\" href=\"/Portfolio/#experience\">Experience</a>\n  //             <a className=\"nav-link\" href=\"/Portfolio/#works\">Works</a>\n  //             <a className=\"nav-link\" href=\"mailto:aaronchen2233@gmail.com\">Email</a>\n  //             <Link className=\"nav-link\" to=\"/resume\">Resume</Link>\n\n  //             <NavDropdown title=\"Language\" id=\"nav-dropdown\">\n  //             <NavDropdown.Item eventKey=\"4.1\" onClick={() => setLocale('en')} >English</NavDropdown.Item>\n  //               <NavDropdown.Item eventKey=\"4.2\" onClick={() => setLocale('zh')} >Chinese</NavDropdown.Item>\n  //               {/* <NavDropdown.Item eventKey=\"4.1\" onClick={() => this.props.setLocale('en')}>English</NavDropdown.Item>\n  //               <NavDropdown.Item eventKey=\"4.2\" onClick={() => this.props.setLocale('zh-Hant')}>Chinese</NavDropdown.Item> */}\n  //             </NavDropdown>\n  //           </Nav>\n  //         </Navbar.Collapse>\n  //       </Navbar>\n  //       <Home></Home>\n  //       <About></About>\n  //       <Experience></Experience>\n  //       <Works></Works>\n\n  //       <Footer></Footer>\n  //     </Container>\n      \n  //   </Router>\n  //   )\n  // }\n\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { I18nProvider } from './i18n';\n\nconst locales = [ 'en', 'zh' ];\nconst translations = {\n  'en': require('./resources/en').default,\n  'zh': require('./resources/zh').default,\n}\n\n\nReactDOM.render(\n  <I18nProvider locales={locales} translations={translations}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </I18nProvider>,\n  document.getElementById('root')\n);\n  // <IntlProvider locale = {locale} key = {locale} defaultLocale=\"en\">\n  // </IntlProvider>,\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}