{"version":3,"sources":["resources/en.ts","resources/zh.ts","i18n/I18nContext.tsx","i18n/I18nProvider.tsx","i18n/useI18n.tsx","Components/Home.tsx","resources/image/mypicture.jpeg","Components/About.tsx","Components/WorksCards.tsx","resources/image/simplemusicnotesreader.png","resources/image/multiplefilerename.png","resources/image/sudoku.png","resources/image/clipboardtranslator.png","Components/Works.tsx","Components/Experience.tsx","Components/Footer.tsx","resources/resume/enresume.pdf","resources/resume/zhresume.pdf","resources/image/github.svg","resources/image/linkedin.svg","App.tsx","serviceWorker.ts","index.tsx"],"names":["I18nContext","createContext","t","getLocale","setLocale","I18nProvider","props","useState","locale","i18n","key","translations","Provider","value","children","useI18n","useContext","Home","className","id","style","left","right","top","position","color","About","Container","fluid","Row","Col","xs","md","Image","src","mypicture","roundedCircle","WorksCards","Card","bg","text","Body","Title","this","cardTitle","Img","variant","String","image","Button","target","href","gitUri","buttonText","React","Component","Works","CardColumns","simplemusicnotesreaderimage","multiplefilerenameimage","sudokuimage","clipboardtranslatorimage","Experience","Accordion","defaultActiveKey","Header","Toggle","as","Text","eventKey","Collapse","Footer","backgroundColor","textAlign","width","paddingBottom","App","Navbar","fixed","expand","Brand","aria-controls","Nav","NavDropdown","title","Item","onClick","enpdf","zhpdf","github","height","alt","linkedin","Boolean","window","location","hostname","match","require","default","ReactDOM","render","locales","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.707a7796.chunk.js","sourcesContent":["export default {\r\n    'hometitle': 'Hello, I am Aaron Chen. Software Engineer based in Taipei, TW',\r\n    'about': 'About',\r\n    'experience' : 'Experience',\r\n    'works':'Works',\r\n    'email':'Email',\r\n    'resume':'Resume',\r\n    'language':'語言',\r\n    'skills':'Skills',\r\n    'mobiledevelop':'Mobile Development',\r\n    'webdevelop':'Web Development',\r\n    'dasktopdevelop':'Desktop Application Development',\r\n    'database':'Database',\r\n    'developmenttools':'Development Tools',\r\n    'abouttitle':'  Hello, I am Aaron Chen, a software engineer with 5+ years of experience in Windows desktop application development and 1-year experience in Android development. Have Code refactoring experience. Know how to keep code clean and easy to read also has the best performance. Eager to learn more to continuously improve my skills.',\r\n    'neweggtw':'Newegg, Taipei, Taiwan',\r\n    'neweggtwtime':'Sep 2014 - Sep 2018',\r\n    'neweggposition':'Software Engineer',\r\n    'neweggtwdescription':'● Maintain and develop NewEgg.tw website. Include Back end and Front end.',\r\n    'eipdescription':'● Maintain and develop Enterprise Information Portal (EIP). Include Back end and Mobile(Android). Using XMPP, MS SQL Server. And using Active MQ, Solr, Redis made the Back end service response time shorter.',\r\n    'boxdescription':'● Developed the NewEgg Box cloud system desktop application. Using Windows Presentation Foundation (WPF) with MVVM pattern (MVVM Light). Research and share technical skills to improve the team performed.',\r\n    'designedandbuilt':'Designed and Built by Aaron Chen',\r\n    'portfoliousign':'Using React, TypeScript, Bootstrap',\r\n    'simplemusicnotesreaderdescription1':'An Android App for musicians to read music notes. You can open a ',\r\n    'simplemusicnotesreaderdescription2':' file. This app will draw the music notes for you. This app will scroll down automatically. You can set the speed for the scrolling. So you can play and read the notes at the same time.',\r\n    'multiplefilerenamedescription':'A Windows Desktop App. you can rename multiple files. There have three methods for rename. Replace, remove and add characters.',\r\n    'sudokudescription':'A Windows Desktop App. This app can generate random Sudoku question. Have GUI for player play Sudoku. You can choose difficulty. When you finish the sudoku question the timer will stop.',\r\n    'clipboardtranslatordescription':'A Windows Desktop App. This app is a translator. When you copy a vocabulary it will jump a small window at the corner. Which will show you the information and translation about that vocabulary you have copied.',\r\n    'viewgithub':'View GitHub',\r\n    //Proper nouns 專有名詞 Always English\r\n    'mobileskills':'IOS, Android, Objective-C, Swift, Java, Kotlin',\r\n    'webskills':'ASP.NET, React, TypeScript, JavaScript',\r\n    'desktopskills':'WPF, Swing, Tkinter, C#, Java, Python',\r\n    'databaseskills':'Microsoft SQL Server, MongoDB, Firebase',\r\n    'developtoolskills':'Xcode, Android Studio, Microsoft Visual Studio, Visual Studio Code, PyCharm, IntelliJ, Git',\r\n    'sudoku':'SUDOKU',\r\n    'clipboardtranslator':'Clipboard Translator',\r\n    'multiplefilerename':'Multiple File Rename',\r\n    'simplemusicnotesreader':'Simple Music Notes Reader',\r\n    \r\n    'musicreadertech':'Android Kotlin JavaScript MVVM',\r\n    'multiplefilerenametech':'WPF .NET Framework C# MVVM',\r\n    'sudokutech':'Swing java',\r\n    'clipboardtranslatortech':'Swing java'\r\n};","export default {\r\n    'hometitle': '您好，我是 陳志嶄。 在台北的軟體工程師',\r\n    'about': '關於',\r\n    'experience' : '經驗',\r\n    'works':'作品',\r\n    'email':'信箱',\r\n    'resume':'履歷',\r\n    'language':'Language',\r\n    'skills':'技能',\r\n    'mobiledevelop':'手機軟體開發',\r\n    'webdevelop':'網頁開發',\r\n    'dasktopdevelop':'桌面程式開發',\r\n    'database':'資料庫',\r\n    'developmenttools':'開發工具',\r\n    'abouttitle':'  您好，我是陳志嶄，一個有五年以上Windows 桌面程式開發的經驗與一年Android開發的軟體工程師，有重構的經驗，知道怎麼維持Code乾淨易讀且有最好的效能，喜愛學習與提升我的技能',\r\n    'neweggtw':'台灣新蛋, 台灣, 台北',\r\n    'neweggtwtime':'2014年9月 - 2018年9月',\r\n    'neweggposition':'軟體工程師',\r\n    'neweggtwdescription':'● 維護與開發NewEgg.tw網站，包括前端與後端',\r\n    'eipdescription':'● 維護與開發企業入口網站(EIP)，包括後端與手機端(Android)使用 XMPP、MS SQL Server，使用Active MQ、Solr、Redis使後端有好快的回應時間',\r\n    'boxdescription':'● 開發NewEgg Box 雲端系統桌面應用程式，使用Windows Presentation Foundation (WPF) 與 MVVM (MVVM Light)架構。研究與技術分享使團隊有更好的產出',\r\n    'designedandbuilt':'由陳志嶄設計與建造',\r\n    'portfoliousign':'使用 React, TypeScript, Bootstrap',\r\n    'simplemusicnotesreaderdescription1':'一個給音樂家讀樂譜的Android App，你可以開啟一個 ',\r\n    'simplemusicnotesreaderdescription2':' 檔，這個軟體會顯示樂譜，這個軟體會自動向下捲動樂譜，你可以設定捲動速度，所以你可以一邊演湊一邊讀樂譜。',\r\n    'multiplefilerenamedescription':'一個你可以批次幫檔案改名的 Windows 桌面軟體，一共有三種改名方法，取代，刪除與新增字元。',\r\n    'sudokudescription':'一個能隨機產生數獨問題的 Windows 桌面軟體，有使用者介面可使使用者玩數獨，可選擇難度，當你完成時計時器會自動暫停。',\r\n    'clipboardtranslatordescription':'一個翻譯的 Windows 桌面軟體，當你複製一個單字時會在角落跳出一個小視窗，上面會顯示關於這個單字的相關資訊與翻譯。',\r\n    'viewgithub':'查看 GitHub',\r\n    //Proper nouns 專有名詞 Always English\r\n    'mobileskills':'IOS, Android, Objective-C, Swift, Java, Kotlin',\r\n    'webskills':'ASP.NET, React, TypeScript, JavaScript',\r\n    'desktopskills':'WPF, Swing, Tkinter, C#, Java, Python',\r\n    'databaseskills':'Microsoft SQL Server, MongoDB, Firebase',\r\n    'developtoolskills':'Xcode, Android Studio, Microsoft Visual Studio, Visual Studio Code, PyCharm, IntelliJ, Git',\r\n    'sudoku':'SUDOKU',\r\n    'clipboardtranslator':'Clipboard Translator',\r\n    'multiplefilerename':'Multiple File Rename',\r\n    'simplemusicnotesreader':'Simple Music Notes Reader',\r\n\r\n    'musicreadertech':'Android Kotlin JavaScript MVVM',\r\n    'multiplefilerenametech':'WPF .NET Framework C# MVVM',\r\n    'sudokutech':'Swing java',\r\n    'clipboardtranslatortech':'Swing java'\r\n};","import { createContext } from 'react';\r\n\r\nexport type I18nContextProps = {\r\n  t: (key: string) => string,\r\n  getLocale: () => void,\r\n  setLocale: (locale: string) => void,\r\n};\r\n\r\nconst I18nContext = createContext<I18nContextProps>({\r\n  t: () => '',\r\n  getLocale: () => {},\r\n  setLocale: () => {},\r\n});\r\n\r\nexport default I18nContext;","import React, { useState } from 'react';\r\nimport I18nContext, { I18nContextProps } from './I18nContext';\r\n\r\ntype I18nProviderProps = {\r\n  locales: string[],\r\n  translations: any;\r\n};\r\n\r\nconst I18nProvider: React.FC<I18nProviderProps> = (props) => {\r\n  const [ locale, setLocale ] = useState('zh');\r\n\r\n  const i18n: I18nContextProps = { \r\n    t: key => props.translations[locale][key],\r\n    getLocale: () => locale,\r\n    setLocale: locale => setLocale(locale),\r\n  };\r\n\r\n  return (\r\n    <I18nContext.Provider value={i18n}>\r\n      {props.children}\r\n    </I18nContext.Provider>\r\n  );\r\n};\r\n\r\nexport default I18nProvider;","import { useContext } from 'react';\r\nimport I18nContext from './I18nContext';\r\n\r\nfunction useI18n () {\r\n  const i18n = useContext(I18nContext);\r\n  return i18n;\r\n}\r\n\r\nexport default useI18n;","import React from \"react\"\r\nimport { useI18n } from '../i18n';\r\n\r\nconst Home: React.FC = () => {\r\n    const { t, setLocale } = useI18n();\r\n    return (\r\n        <div className=\"pages textapperanimation\" id = \"home\">\r\n            <h1 style={{left:'10%', right:'10%' , top: '40%', position:'absolute', color:'#FFFFFF' }}>{t('hometitle')}</h1>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Home;","export default __webpack_public_path__ + \"static/media/mypicture.0ddf908e.jpeg\";","import React from \"react\"\r\nimport { useI18n } from '../i18n';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Image from 'react-bootstrap/Image'\r\nimport mypicture from '../resources/image/mypicture.jpeg'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nconst About: React.FC = () => {\r\n    const { t, setLocale } = useI18n();\r\n    return (\r\n        <div className=\"pages\" id=\"about\">\r\n            <h1 className='title lpten whitetext'>{t('about')}</h1>\r\n            <h6 className='lpten rpten tptwo whitetext'>{t('abouttitle')}</h6>\r\n            <br></br>\r\n            <br></br>\r\n            <Container fluid={true}>\r\n                <Row className='lpten rpten'>\r\n                    <Col xs={18} md={15} className='btten' >\r\n                        <Container className=\"p-0\" fluid={true}>\r\n                            <h3 className='lightbluetext'>{t('skills')}</h3>\r\n                            <h4 className='pinktext'>{t('mobiledevelop')}</h4>\r\n                            <h5 className='whitetext'>{t('mobileskills')}</h5>\r\n                            <h4 className='pinktext'>{t('webdevelop')}</h4>\r\n                            <h5 className='whitetext'>{t('webskills')}</h5>\r\n                            <h4 className='pinktext'>{t('dasktopdevelop')}</h4>\r\n                            <h5 className='whitetext'>{t('desktopskills')}</h5>\r\n                            <h4 className='pinktext'>{t('database')}</h4>\r\n                            <h5 className='whitetext'>{t('databaseskills')}</h5>\r\n                            <h4 className='pinktext'>{t('developmenttools')}</h4>\r\n                            <h5 className='whitetext'>{t('developtoolskills')}</h5>\r\n                        </Container>\r\n                    </Col>\r\n                    <Col xs={12} md={5} >\r\n                        <div>\r\n                            <Image className='picutre' src={mypicture} roundedCircle />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n  }\r\n  \r\nexport default About;","import React,{ReactNode} from \"react\"\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\ninterface WorksCardsProps{\r\n    cardTitle:string,\r\n    children:ReactNode,\r\n    gitUri:string,\r\n    buttonText:string,\r\n    image:any\r\n}\r\n\r\n// interface WorksCardsStates{\r\n//     title:string,\r\n//     cardBody:ReactNode,\r\n//     gitUri:string,\r\n//     buttonText:string\r\n// }\r\n\r\nclass WorksCards extends React.Component<WorksCardsProps, {}>{\r\n    constructor(props: WorksCardsProps) {\r\n        super(props);\r\n        // this.state = { \r\n        //     title: props.cardTitle, \r\n        //     cardBody: props.children,\r\n        //     gitUri:props.gitUri,\r\n        //     buttonText:props.buttonText\r\n        // };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card bg='dark' text='white'>\r\n            <Card.Body>\r\n            <Card.Title>{this.props.cardTitle}</Card.Title>\r\n            <Card.Img variant=\"top\" src={String(this.props.image)} />\r\n            {this.props.children}\r\n            <Button target=\"_blank\" href={this.props.gitUri} variant=\"primary\">{this.props.buttonText}</Button>\r\n            </Card.Body>\r\n            </Card>\r\n        );\r\n      }\r\n}\r\n\r\nexport default WorksCards; ","export default __webpack_public_path__ + \"static/media/simplemusicnotesreader.777bec4c.png\";","export default __webpack_public_path__ + \"static/media/multiplefilerename.e4cde5a5.png\";","export default __webpack_public_path__ + \"static/media/sudoku.869a439d.png\";","export default __webpack_public_path__ + \"static/media/clipboardtranslator.f766adc0.png\";","import React from \"react\"\r\nimport { useI18n } from '../i18n';\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport Button from 'react-bootstrap/Button'\r\nimport WorksCards from './WorksCards'\r\nimport simplemusicnotesreaderimage from '../resources/image/simplemusicnotesreader.png'\r\nimport multiplefilerenameimage from '../resources/image/multiplefilerename.png'\r\nimport sudokuimage from '../resources/image/sudoku.png'\r\nimport clipboardtranslatorimage from '../resources/image/clipboardtranslator.png'\r\n\r\n\r\n\r\n\r\nconst Works: React.FC = () => {\r\n    const { t, setLocale } = useI18n();\r\n    \r\n    return (\r\n\r\n        <div className=\"pages\" id=\"works\">\r\n            <h1 className='title lpten whitetext'>{t('works')}</h1>\r\n            <CardColumns className='lpten rpten tptwo'>\r\n            <WorksCards buttonText={t('viewgithub')} cardTitle={t('simplemusicnotesreader')} gitUri=\"https://github.com/AaronCChen2233/--Portfolio--simple_music_notes_reader\" image={simplemusicnotesreaderimage}>\r\n                <p>\r\n                    {t('simplemusicnotesreaderdescription1')}\r\n                    <a href='https://www.musicxml.com/' target=\"_blank\">.MusicXML</a>\r\n                    {t('simplemusicnotesreaderdescription2')}\r\n                </p>\r\n                <h6 className='lightbluetext'>{t('musicreadertech')}</h6>\r\n            </WorksCards>\r\n\r\n            <WorksCards buttonText={t('viewgithub')} cardTitle={t('multiplefilerename')} gitUri=\"https://github.com/AaronCChen2233/--Portfolio--Multiple_File_Rename\" image={multiplefilerenameimage}>\r\n                <p>\r\n                    {t('multiplefilerenamedescription')}\r\n                </p>\r\n                <h6 className='lightbluetext'>{t('multiplefilerenametech')}</h6>\r\n            </WorksCards>\r\n\r\n            <WorksCards buttonText={t('viewgithub')} cardTitle={t('sudoku')} gitUri=\"https://github.com/AaronCChen2233/--Portfolio--SUDOKU\" image={sudokuimage}>\r\n                <p>\r\n                    {t('sudokudescription')}\r\n                </p>\r\n                <h6 className='lightbluetext'>{t('sudokutech')}</h6>\r\n            </WorksCards>\r\n\r\n            <WorksCards buttonText={t('viewgithub')} cardTitle={t('clipboardtranslator')} gitUri=\"https://github.com/AaronCChen2233/--Portfolio--ClipboardTranslator\" image={clipboardtranslatorimage}>\r\n                <p>\r\n                    {t('clipboardtranslatordescription')}\r\n                </p>\r\n                <h6 className='lightbluetext'>{t('clipboardtranslatortech')}</h6>\r\n            </WorksCards>\r\n\r\n            </CardColumns>\r\n        </div>\r\n    );\r\n  }\r\n  \r\nexport default Works;","import React from \"react\"\r\nimport { useI18n } from '../i18n';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nconst Experience: React.FC = () => {\r\n    const { t, setLocale } = useI18n();\r\n    return (\r\n        <div className=\"pages\" id=\"experience\">\r\n            <h1 className='title lpten whitetext'>{t('experience')}</h1>\r\n\r\n            <Accordion className='lpten rpten tptwo' defaultActiveKey=\"0\">\r\n                <Card bg ='dark' text='white'  >\r\n                    <Card.Header>\r\n                    <Accordion.Toggle as={Card.Text} eventKey=\"0\">\r\n                        {t('neweggtw')}\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                        <h3 className='lightbluetext'>{t('neweggposition')}</h3>\r\n                        <h5 className='pinktext'>{t('neweggtwtime')}</h5>\r\n                        <h5 className='whitetext'>{t('neweggtwdescription')}</h5>\r\n                        <h5 className='whitetext'>{t('eipdescription')}</h5>\r\n                        <h5 className='whitetext'>{t('boxdescription')}</h5>\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n                \r\n            </Accordion>\r\n\r\n        </div>\r\n    );\r\n  }\r\n  \r\nexport default Experience;","import React from \"react\"\r\nimport { useI18n } from '../i18n';\r\n\r\nconst Footer: React.FC = () => {\r\n    const { t, setLocale } = useI18n();\r\n    return (\r\n        <footer style={{backgroundColor:\"#1D1D21\" }} >\r\n            <a href=\"https://github.com/AaronCChen2233/Portfolio/tree/master\">\r\n                <div className='greentext' style={{textAlign:\"center\" , width:\"100hv\"}}>{t('designedandbuilt')}</div>\r\n            </a>\r\n            <div className='greentext' style={{textAlign:\"center\" , width:\"100hv\", paddingBottom: \"60px\"}}>{t('portfoliousign')}</div>\r\n        </footer>\r\n    );\r\n  }\r\n  \r\n  export default Footer;","export default __webpack_public_path__ + \"static/media/enresume.e48eabf6.pdf\";","export default __webpack_public_path__ + \"static/media/zhresume.02a592a6.pdf\";","export default __webpack_public_path__ + \"static/media/github.e0dde02e.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.db76f33f.svg\";","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router, Route, Link } from \"react-router-dom\"\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Home from './Components/Home';\r\nimport About from './Components/About';\r\nimport Works from './Components/Works';\r\nimport Experience from './Components/Experience';\r\nimport Footer from './Components/Footer';\r\nimport { useI18n } from './i18n';\r\n// import enResume from './resources/resume/enResume.pdf'\r\nimport enpdf from './resources/resume/enresume.pdf'\r\nimport zhpdf from './resources/resume/zhresume.pdf'\r\nimport github from './resources/image/github.svg'\r\nimport linkedin from './resources/image/linkedin.svg'\r\n\r\nconst App: React.FC = () => {\r\n  const { t, getLocale, setLocale } = useI18n();\r\n  return (\r\n    <Router>\r\n    <Container className=\"p-0\" fluid={true}>\r\n      <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\" expand=\"sm\">\r\n        <Navbar.Brand href=\"/Portfolio/#home\">Aaron Chen</Navbar.Brand>\r\n        <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\r\n        <Navbar.Collapse id=\"navbar-toggle\">\r\n          <Nav className=\"ml-auto\">\r\n          <NavDropdown title={t('language')} id=\"nav-dropdown\">\r\n              <NavDropdown.Item onClick={() => setLocale('en')} >English</NavDropdown.Item>\r\n              <NavDropdown.Item onClick={() => setLocale('zh')} >正體中文</NavDropdown.Item>\r\n            </NavDropdown>\r\n            <a className=\"nav-link\" href=\"/Portfolio/#about\">{t('about')}</a>\r\n            <a className=\"nav-link\" href=\"/Portfolio/#experience\">{t('experience')}</a>\r\n            <a className=\"nav-link\" href=\"/Portfolio/#works\">{t('works')}</a>\r\n            <a className=\"nav-link\" target=\"_blank\" href={String(getLocale()) == \"en\" ? enpdf : zhpdf}>{t('resume')}</a>\r\n            <a className=\"nav-link\" href=\"mailto:aaronchen2233@gmail.com\">{t('email')}</a>\r\n     \r\n            <a className=\"iconlink\" target=\"_blank\" href=\"https://github.com/AaronCChen2233\">\r\n              <img src={github} width=\"40\" height=\"40\" className=\"nav-link\" alt=\"github\" />\r\n            </a>\r\n\r\n            <a className=\"iconlink\" target=\"_blank\" href=\"https://www.linkedin.com/in/aaron-chen-0b31b6190/\">\r\n              <img src={linkedin} width=\"40\" height=\"40\" className=\"nav-link\" alt=\"github\" />\r\n            </a>\r\n\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Home></Home>\r\n      <About></About>\r\n      <Experience></Experience>\r\n      <Works></Works>\r\n\r\n      <Footer></Footer>\r\n    </Container>\r\n    \r\n  </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// interface AppProps{\r\n//     // setLocale : (l:string) => void\r\n// }\r\n\r\n// class App extends React.Component<AppProps, {}>{\r\n//   constructor(props : AppProps) {\r\n//     super(props);\r\n//     this.state = {\r\n//     }\r\n//   }\r\n\r\n  // render() {\r\n  //   return (\r\n  //     <Router>\r\n  //     <Container className=\"p-0\" fluid={true}>\r\n  //       <Navbar fixed=\"top\" bg=\"#1D1D21\" variant=\"dark\" expand=\"sm\">\r\n  //         <Navbar.Brand href=\"/Portfolio/#home\">Aaron Chen</Navbar.Brand>\r\n  //         <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\r\n  //         <Navbar.Collapse id=\"navbar-toggle\">\r\n  //           <Nav className=\"ml-auto\">\r\n  //             <a className=\"nav-link\" href=\"/Portfolio/#about\">{t('learn_react')}</a>\r\n  //             <a className=\"nav-link\" href=\"/Portfolio/#experience\">Experience</a>\r\n  //             <a className=\"nav-link\" href=\"/Portfolio/#works\">Works</a>\r\n  //             <a className=\"nav-link\" href=\"mailto:aaronchen2233@gmail.com\">Email</a>\r\n  //             <Link className=\"nav-link\" to=\"/resume\">Resume</Link>\r\n\r\n  //             <NavDropdown title=\"Language\" id=\"nav-dropdown\">\r\n  //             <NavDropdown.Item eventKey=\"4.1\" onClick={() => setLocale('en')} >English</NavDropdown.Item>\r\n  //               <NavDropdown.Item eventKey=\"4.2\" onClick={() => setLocale('zh')} >Chinese</NavDropdown.Item>\r\n  //               {/* <NavDropdown.Item eventKey=\"4.1\" onClick={() => this.props.setLocale('en')}>English</NavDropdown.Item>\r\n  //               <NavDropdown.Item eventKey=\"4.2\" onClick={() => this.props.setLocale('zh-Hant')}>Chinese</NavDropdown.Item> */}\r\n  //             </NavDropdown>\r\n  //           </Nav>\r\n  //         </Navbar.Collapse>\r\n  //       </Navbar>\r\n  //       <Home></Home>\r\n  //       <About></About>\r\n  //       <Experience></Experience>\r\n  //       <Works></Works>\r\n\r\n  //       <Footer></Footer>\r\n  //     </Container>\r\n      \r\n  //   </Router>\r\n  //   )\r\n  // }\r\n\r\n// }\r\n\r\n// export default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { I18nProvider } from './i18n';\r\n\r\nconst locales = [ 'en', 'zh' ];\r\nconst translations = {\r\n  'en': require('./resources/en').default,\r\n  'zh': require('./resources/zh').default,\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <I18nProvider locales={locales} translations={translations}>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </I18nProvider>,\r\n  document.getElementById('root')\r\n);\r\n  // <IntlProvider locale = {locale} key = {locale} defaultLocale=\"en\">\r\n  // </IntlProvider>,\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}